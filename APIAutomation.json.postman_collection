{
	"id": "546026ae-812c-bf91-56a0-cd737d43461d",
	"name": "API Automation",
	"description": "",
	"order": [
		"b918b436-9a1b-e260-66d8-0177476d10d8",
		"c2873f51-bb80-026b-6526-b567a9b1b05a",
		"4b448da8-f480-15f8-a3d4-abf11a3779b8",
		"fa29a0eb-d163-ce01-8409-3e86f44b8ea4"
	],
	"folders": [],
	"timestamp": 1455172827629,
	"owner": 0,
	"remoteLink": "https://www.getpostman.com/collections/f7f3383184bee0cc0e34",
	"public": false,
	"requests": [
		{
			"id": "4b448da8-f480-15f8-a3d4-abf11a3779b8",
			"headers": "",
			"url": "{{url}}/blog/posts?token={{token}}&user_id={{user_id}}",
			"preRequestScript": "",
			"pathVariables": {
				"user_id": null
			},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n \nif (data.post_id) {\n  tests[\"post_id found\"] = true;\n \n  postman.setEnvironmentVariable(\"post_id\", data.post_id);\n}\nelse {\n  tests[\"post_id found\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455186360736,
			"name": "PostaBlog",
			"description": "",
			"collectionId": "546026ae-812c-bf91-56a0-cd737d43461d",
			"responses": [],
			"rawModeData": "{\n  \"post\": \"We have created a new post\"\n}"
		},
		{
			"id": "b918b436-9a1b-e260-66d8-0177476d10d8",
			"headers": "",
			"url": "http://demo.getpostman.com/status",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\nvar contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n\n\n\n\n \ntests[\"Has Content-Type\"] = contentTypeHeaderExists;\n \nif (contentTypeHeaderExists) {\n    tests[\"Content-Type is application/json\"] = responseHeaders[\"Content-Type\"] === \"application/json\";\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455280735215,
			"name": "Get-Request",
			"description": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
			"collectionId": "546026ae-812c-bf91-56a0-cd737d43461d",
			"responses": []
		},
		{
			"id": "c2873f51-bb80-026b-6526-b567a9b1b05a",
			"headers": "",
			"url": "{{url}}/blog/users/tokens/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n \nif (data.token) {\n  tests[\"Body has token\"] = true;\n  postman.setEnvironmentVariable(\"user_id\", data.user_id);\n  postman.setEnvironmentVariable(\"token\", data.token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1456305876795,
			"name": "Add Users",
			"description": "",
			"collectionId": "546026ae-812c-bf91-56a0-cd737d43461d",
			"responses": [],
			"rawModeData": "{\n\"username\": \"test2\",\n\"password\": \"test2\"\n}"
		},
		{
			"id": "fa29a0eb-d163-ce01-8409-3e86f44b8ea4",
			"headers": "",
			"url": "{{url}}/blog/posts/2175",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var schema = {\n\"type\": \"object\",\n\"properties\": {\n\"content\": \"integer\",\n\"created_at\": \"integer\",\n\"id\": \"integer\"\n},\n\"required\": [\"content\", \"created_at\", \"id\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nvar result = tv4.validateResult(data, schema);\n \ntests[\"Valid schema\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1455190365688,
			"name": "ValidatePost",
			"description": "",
			"collectionId": "546026ae-812c-bf91-56a0-cd737d43461d",
			"responses": []
		}
	]
}